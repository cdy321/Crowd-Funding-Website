<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.cdy.crowd.dao.TAuthDao">

    <resultMap type="cn.cdy.crowd.entity.TAuth" id="TAuthMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="categoryId" column="category_id" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="TAuthMap">
        select
        id, name, title, category_id
        from project_crowd.t_auth
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="TAuthMap">
        select
        id, name, title, category_id
        from project_crowd.t_auth
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="TAuthMap">
        select
        id, name, title, category_id
        from project_crowd.t_auth
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="title != null and title != ''">
                and title = #{title}
            </if>
            <if test="categoryId != null">
                and category_id = #{categoryId}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into project_crowd.t_auth(name, title, category_id)
        values (#{name}, #{title}, #{categoryId})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into project_crowd.t_auth(name, title, category_id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.name}, #{entity.title}, #{entity.categoryId})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into project_crowd.t_auth(name, title, category_id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.name}, #{entity.title}, #{entity.categoryId})
        </foreach>
        on duplicate key update
        name = values(name) , title = values(title) , category_id = values(category_id)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update project_crowd.t_auth
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="title != null and title != ''">
                title = #{title},
            </if>
            <if test="categoryId != null">
                category_id = #{categoryId},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from project_crowd.t_auth where id = #{id}
    </delete>

    <select id="getAuthIdByRoleId" resultType="int">
        select auth_id from project_crowd.inner_role_auth
        where role_id = #{roleId}
    </select>

    <delete id="deleteOldRelationship">
        delete from project_crowd.inner_role_auth
        where role_id = #{roleId}
    </delete>

    <insert id="insertNewRelationship">
        insert into project_crowd.inner_role_auth(role_id, auth_id) 
        values <foreach collection="authIdList" item="authId" separator=",">
        (#{roleId},#{authId})
    </foreach>
    </insert>

    <select id="selectAssignedAuthNameByAdminId" resultType="String">
         SELECT DISTINCT t_auth.name
         FROM t_auth
         LEFT JOIN inner_role_auth ON t_auth.id=inner_role_auth.auth_id
         LEFT JOIN inner_admin_role ON inner_admin_role.role_id=inner_role_auth.role_id
         WHERE inner_admin_role.admin_id=#{adminId} and t_auth.name != "" and t_auth.name is
         not null
    </select>

</mapper>

